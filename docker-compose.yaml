services:
  bikehopper-web-app:
    container_name: bikehopper-web-app
    restart: unless-stopped
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      FILE_SERVICE_NAME: bikehopper-fit-file-server-svc
      PORT: "${WEB_APP_CONTAINER_PORT}"
      HOSTNAME: svc.cluster.local
      PHOTON_SERVICE_NAME: photon:2322
      GRAPHHOPPER_SERVICE_NAME: graphhopper:8989
      NODE_ENV: development
      NOMINATIM_SERVICE_NAME: nominatim
      NAMESPACE: "${NAMESPACE}"
      GTFS_REALTIME_TOKEN: "${GTFS_REALTIME_TOKEN}"
      WEB_APP_GEO_CONFIG_FOLDER_CONTAINER_PATH: "${WEB_APP_GEO_CONFIG_FOLDER_CONTAINER_PATH}"
      WEB_APP_AGENCY_NAMES_FILE_CONTAINER_PATH: "${WEB_APP_AGENCY_NAMES_FILE_CONTAINER_PATH}"
      WEB_APP_DATA_ACK_FILE_CONTAINER_PATH: "${WEB_APP_DATA_ACK_FILE_CONTAINER_PATH}"
      SUPPORTED_REGION: "${SUPPORTED_REGION}"
    healthcheck:
      test: curl -f --silent http://localhost:${WEB_APP_CONTAINER_PORT}/health
      retries: 20
      start_period: 5s
      timeout: 2s
    image: ghcr.io/bikehopper/bikehopper-web-app:v1.1.11
    build: .
    labels:
      - "app=bikehopper-web-app"
      - "traefik.enable=true"
      - "traefik.http.routers.bikehopper-web-app.rule=Host(`api.app.localhost`)"
      - "traefik.http.routers.bikehopper-web-app.tls=true"
    volumes:
      - "${WEB_APP_GEO_CONFIG_HOST_PATH}:${WEB_APP_GEO_CONFIG_FOLDER_CONTAINER_PATH}"
      - "${WEB_APP_AGENCY_NAMES_FILE_HOST_PATH}:${WEB_APP_AGENCY_NAMES_FOLDER_CONTAINER_PATH}"
      - "${WEB_APP_DATA_ACK_FILE_HOST_PATH}:${WEB_APP_DATA_ACK_FOLDER_CONTAINER_PATH}"
    ports:
    - "${WEB_APP_CONTAINER_PORT}:${WEB_APP_CONTAINER_PORT}"
    depends_on:
      geoconfig-generator:
        condition: service_completed_successfully

  geoconfig-generator:
    container_name: geoconfig-generator
    deploy:
      restart_policy:
        condition: none
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    environment:
      FILTERED_AGENCY_IDS: "${FILTERED_AGENCY_IDS}"
      MANUALLY_FILTERED_ROUTE_IDS: "${MANUALLY_FILTERED_ROUTE_IDS}"
      GTFS_ZIP_PATH: "${GTFS_ZIP_CONTAINER_PATH}"
      OUTPUT_DIR_PATH: "/usr/app/mnts/output"
    volumes:
      - "${GTFS_ZIP_HOST_PATH}:${GTFS_ZIP_CONTAINER_PATH}"
      - "${WEB_APP_GEO_CONFIG_HOST_PATH}:/usr/app/mnts/output"
    image: ghcr.io/bikehopper/gtfs-processor:v1.1.1
    command: "node /app/src/generateLocalTransitBounds.js"
    depends_on:
      gtfs-downloader:
        condition: service_completed_successfully

  gtfs-downloader:
    image: amazon/aws-cli
    container_name: gtfs-downloader
    deploy:
      restart_policy:
        condition: none
      replicas: 1
      resources:
        reservations:
          memory: 128M
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_ENDPOINT_URL: "${AWS_ENDPOINT_URL}"
    volumes:
      - "${DOWNLOADER_OUTPUT_HOST_PATH}:/aws"
    command: "s3 cp s3://${AWS_S3_GTFS_KEY} /aws"

version: '3.8'
