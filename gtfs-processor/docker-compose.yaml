services:
  bikehopper-gtfs-processor:
    container_name: bikehopper-gtfs-processor
    deploy:
      restart_policy:
        condition: none
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    environment:
      FILTERED_AGENCY_IDS: "${FILTERED_AGENCY_IDS}"
      MANUALLY_FILTERED_ROUTE_IDS: "${MANUALLY_FILTERED_ROUTE_IDS}"
      GTFS_ZIP_PATH: "/usr/app/mnts/gtfs.zip"
      OUTPUT_DIR_PATH: "/usr/app/mnts/output"
    volumes:
      - "${GTFS_ZIP_PATH}:/usr/app/mnts/gtfs.zip"
      - "${OUTPUT_DIR_PATH}:/usr/app/mnts/output"
    image: ghcr.io/bikehopper/gtfs-processor:v1.0.2
    command: "node /app/src/generateLocalTransitBounds.js"
    build: .

  bikehopper-gtfs-merge:
    container_name: bikehopper-gtfs-merge
    deploy:
      restart_policy:
        condition: none
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    environment:
      SKIP_RECORDS_WITH_ERROR: "${SKIP_RECORDS_WITH_ERROR}"
    volumes:
      - "${HOST_GTFS_ZIPS_PATH}:/usr/app/mnts/gtfs-zips"
      - "${HOST_OUTPUT_DIR_PATH}:/usr/app/mnts/output"
    image: ghcr.io/bikehopper/gtfs-processor:v1.0.2
    command: "node /app/src/merge-gtfs.js"
    build: .

  downloader:
    image: amazon/aws-cli
    container_name: bikehopper-downloader
    deploy:
      restart_policy:
        condition: none
      replicas: 1
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    environment:
      AWS_ACCESS_KEY_ID: "${AWS_ACCESS_KEY_ID}"
      AWS_SECRET_ACCESS_KEY: "${AWS_SECRET_ACCESS_KEY}"
      AWS_ENDPOINT_URL: "${AWS_ENDPOINT_URL}"
    volumes:
      - "./volumes/downloader:/aws"
    # command: "s3 cp s3://test /aws --recursive"
version: '3.8'

